// ed_synth_emif_ph2_inst_emif_ph2_610_cv7eefi.v

// This file was auto-generated from emif_ph2_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 24.1 115

`timescale 1 ps / 1 ps
module ed_synth_emif_ph2_inst_emif_ph2_610_cv7eefi (
		input  wire         ref_clk_0,           //     ref_clk_0.clk
		input  wire         core_init_n_0,       // core_init_n_0.reset_n
		output wire         usr_clk_0,           //     usr_clk_0.clk
		output wire         usr_rst_n_0,         //   usr_rst_n_0.reset_n
		input  wire [31:0]  s0_axi4_araddr,      //       s0_axi4.araddr
		input  wire [1:0]   s0_axi4_arburst,     //              .arburst
		input  wire [6:0]   s0_axi4_arid,        //              .arid
		input  wire [7:0]   s0_axi4_arlen,       //              .arlen
		input  wire         s0_axi4_arlock,      //              .arlock
		input  wire [3:0]   s0_axi4_arqos,       //              .arqos
		input  wire [2:0]   s0_axi4_arsize,      //              .arsize
		input  wire         s0_axi4_arvalid,     //              .arvalid
		input  wire [3:0]   s0_axi4_aruser,      //              .aruser
		input  wire [2:0]   s0_axi4_arprot,      //              .arprot
		input  wire [31:0]  s0_axi4_awaddr,      //              .awaddr
		input  wire [1:0]   s0_axi4_awburst,     //              .awburst
		input  wire [6:0]   s0_axi4_awid,        //              .awid
		input  wire [7:0]   s0_axi4_awlen,       //              .awlen
		input  wire         s0_axi4_awlock,      //              .awlock
		input  wire [3:0]   s0_axi4_awqos,       //              .awqos
		input  wire [2:0]   s0_axi4_awsize,      //              .awsize
		input  wire         s0_axi4_awvalid,     //              .awvalid
		input  wire [3:0]   s0_axi4_awuser,      //              .awuser
		input  wire [2:0]   s0_axi4_awprot,      //              .awprot
		input  wire         s0_axi4_bready,      //              .bready
		input  wire         s0_axi4_rready,      //              .rready
		input  wire [255:0] s0_axi4_wdata,       //              .wdata
		input  wire [31:0]  s0_axi4_wstrb,       //              .wstrb
		input  wire         s0_axi4_wlast,       //              .wlast
		input  wire         s0_axi4_wvalid,      //              .wvalid
		input  wire [63:0]  s0_axi4_wuser,       //              .wuser
		output wire [63:0]  s0_axi4_ruser,       //              .ruser
		output wire         s0_axi4_arready,     //              .arready
		output wire         s0_axi4_awready,     //              .awready
		output wire [6:0]   s0_axi4_bid,         //              .bid
		output wire [1:0]   s0_axi4_bresp,       //              .bresp
		output wire         s0_axi4_bvalid,      //              .bvalid
		output wire [255:0] s0_axi4_rdata,       //              .rdata
		output wire [6:0]   s0_axi4_rid,         //              .rid
		output wire         s0_axi4_rlast,       //              .rlast
		output wire [1:0]   s0_axi4_rresp,       //              .rresp
		output wire         s0_axi4_rvalid,      //              .rvalid
		output wire         s0_axi4_wready,      //              .wready
		output wire         mem_ck_t_0,          //         mem_0.mem_ck_t
		output wire         mem_ck_c_0,          //              .mem_ck_c
		output wire         mem_cke_0,           //              .mem_cke
		output wire         mem_reset_n_0,       //              .mem_reset_n
		output wire         mem_cs_0,            //              .mem_cs
		output wire [5:0]   mem_ca_0,            //              .mem_ca
		inout  wire [31:0]  mem_dq_0,            //              .mem_dq
		inout  wire [3:0]   mem_dqs_t_0,         //              .mem_dqs_t
		inout  wire [3:0]   mem_dqs_c_0,         //              .mem_dqs_c
		inout  wire [3:0]   mem_dmi_0,           //              .mem_dmi
		input  wire         oct_rzqin_0,         //         oct_0.oct_rzqin
		input  wire         s0_axi4lite_clk,     //   s0_axil_clk.clk,        Clock Input
		input  wire         s0_axi4lite_rst_n,   // s0_axil_rst_n.reset_n,    Reset Input
		input  wire [31:0]  s0_axi4lite_awaddr,  //       s0_axil.awaddr
		input  wire         s0_axi4lite_awvalid, //              .awvalid
		output wire         s0_axi4lite_awready, //              .awready
		input  wire [31:0]  s0_axi4lite_wdata,   //              .wdata
		input  wire [3:0]   s0_axi4lite_wstrb,   //              .wstrb
		input  wire         s0_axi4lite_wvalid,  //              .wvalid
		output wire         s0_axi4lite_wready,  //              .wready
		output wire [1:0]   s0_axi4lite_bresp,   //              .bresp
		output wire         s0_axi4lite_bvalid,  //              .bvalid
		input  wire         s0_axi4lite_bready,  //              .bready
		input  wire [31:0]  s0_axi4lite_araddr,  //              .araddr
		input  wire         s0_axi4lite_arvalid, //              .arvalid
		output wire         s0_axi4lite_arready, //              .arready
		output wire [31:0]  s0_axi4lite_rdata,   //              .rdata
		output wire [1:0]   s0_axi4lite_rresp,   //              .rresp
		output wire         s0_axi4lite_rvalid,  //              .rvalid
		input  wire         s0_axi4lite_rready,  //              .rready
		input  wire [2:0]   s0_axi4lite_awprot,  //              .awprot
		input  wire [2:0]   s0_axi4lite_arprot   //              .arprot
	);

	wire   [1314:0] arch_0_calbus_periph_0_calbus_readdata;    // arch_0:calbus_readdata_0 -> calip_0:periph_calbus_readdata_0
	wire  [32767:0] arch_0_calbus_periph_0_calbus_param_table; // arch_0:calbus_param_table_0 -> calip_0:periph_calbus_param_table_0
	wire   [1341:0] calip_0_calbus_periph_0_calbus;            // calip_0:periph_calbus_0 -> arch_0:calbus_0

	ed_synth_emif_ph2_inst_emif_ph2_phy_arch_fp_610_hoyllai #(
		.PHY_NOC_EN                (0),
		.AXI4_USER_DATA_ENABLE     (0),
		.MEM_NUM_CHANNELS_PER_IO96 (1),
		.AXI4_DATA_WIDTH           (256),
		.AXI4_ADDR_WIDTH           (32),
		.PHY_I3C_EN                (0),
		.SLIM_BL_EN                (0),
		.AXI4_AXUSER_WIDTH         (4),
		.LS_MEM_DQ_WIDTH           (0),
		.MEM_LBD_WIDTH             (0),
		.MEM_LBS_WIDTH             (0),
		.OCT_RZQIN_WIDTH           (1),
		.MEM_ACT_N_WIDTH           (-1),
		.MEM_ALERT_N_WIDTH         (-1),
		.MEM_A_WIDTH               (-1),
		.MEM_BANK_ADDR_WIDTH       (-1),
		.MEM_BANK_GROUP_ADDR_WIDTH (-1),
		.MEM_CA_WIDTH              (6),
		.MEM_CHIP_ID_WIDTH         (-1),
		.MEM_CKE_WIDTH             (1),
		.MEM_CK_C_WIDTH            (1),
		.MEM_CK_T_WIDTH            (1),
		.MEM_CS_N_WIDTH            (-1),
		.MEM_CS_WIDTH              (1),
		.MEM_DBI_N_WIDTH           (-1),
		.MEM_DMI_WIDTH             (4),
		.MEM_DM_N_WIDTH            (-1),
		.MEM_DQS_C_WIDTH           (4),
		.MEM_DQS_T_WIDTH           (4),
		.MEM_DQ_WIDTH              (32),
		.MEM_ODT_WIDTH             (-1),
		.MEM_PAR_WIDTH             (-1),
		.MEM_RDQS_C_WIDTH          (-1),
		.MEM_RDQS_T_WIDTH          (-1),
		.MEM_RESET_N_WIDTH         (1),
		.MEM_WCK_C_WIDTH           (-1),
		.MEM_WCK_T_WIDTH           (-1)
	) arch_0 (
		.ref_clk_0            (ref_clk_0),                                 //   input,      width = 1,       ref_clk_0.clk
		.core_init_n_0        (core_init_n_0),                             //   input,      width = 1,   core_init_n_0.reset_n
		.usr_clk_0            (usr_clk_0),                                 //  output,      width = 1,       usr_clk_0.clk
		.usr_rst_n_0          (usr_rst_n_0),                               //  output,      width = 1,     usr_rst_n_0.reset_n
		.s0_axi4_araddr       (s0_axi4_araddr),                            //   input,     width = 32,         s0_axi4.araddr
		.s0_axi4_arburst      (s0_axi4_arburst),                           //   input,      width = 2,                .arburst
		.s0_axi4_arid         (s0_axi4_arid),                              //   input,      width = 7,                .arid
		.s0_axi4_arlen        (s0_axi4_arlen),                             //   input,      width = 8,                .arlen
		.s0_axi4_arlock       (s0_axi4_arlock),                            //   input,      width = 1,                .arlock
		.s0_axi4_arqos        (s0_axi4_arqos),                             //   input,      width = 4,                .arqos
		.s0_axi4_arsize       (s0_axi4_arsize),                            //   input,      width = 3,                .arsize
		.s0_axi4_arvalid      (s0_axi4_arvalid),                           //   input,      width = 1,                .arvalid
		.s0_axi4_aruser       (s0_axi4_aruser),                            //   input,      width = 4,                .aruser
		.s0_axi4_arprot       (s0_axi4_arprot),                            //   input,      width = 3,                .arprot
		.s0_axi4_awaddr       (s0_axi4_awaddr),                            //   input,     width = 32,                .awaddr
		.s0_axi4_awburst      (s0_axi4_awburst),                           //   input,      width = 2,                .awburst
		.s0_axi4_awid         (s0_axi4_awid),                              //   input,      width = 7,                .awid
		.s0_axi4_awlen        (s0_axi4_awlen),                             //   input,      width = 8,                .awlen
		.s0_axi4_awlock       (s0_axi4_awlock),                            //   input,      width = 1,                .awlock
		.s0_axi4_awqos        (s0_axi4_awqos),                             //   input,      width = 4,                .awqos
		.s0_axi4_awsize       (s0_axi4_awsize),                            //   input,      width = 3,                .awsize
		.s0_axi4_awvalid      (s0_axi4_awvalid),                           //   input,      width = 1,                .awvalid
		.s0_axi4_awuser       (s0_axi4_awuser),                            //   input,      width = 4,                .awuser
		.s0_axi4_awprot       (s0_axi4_awprot),                            //   input,      width = 3,                .awprot
		.s0_axi4_bready       (s0_axi4_bready),                            //   input,      width = 1,                .bready
		.s0_axi4_rready       (s0_axi4_rready),                            //   input,      width = 1,                .rready
		.s0_axi4_wdata        (s0_axi4_wdata),                             //   input,    width = 256,                .wdata
		.s0_axi4_wstrb        (s0_axi4_wstrb),                             //   input,     width = 32,                .wstrb
		.s0_axi4_wlast        (s0_axi4_wlast),                             //   input,      width = 1,                .wlast
		.s0_axi4_wvalid       (s0_axi4_wvalid),                            //   input,      width = 1,                .wvalid
		.s0_axi4_wuser        (s0_axi4_wuser),                             //   input,     width = 64,                .wuser
		.s0_axi4_ruser        (s0_axi4_ruser),                             //  output,     width = 64,                .ruser
		.s0_axi4_arready      (s0_axi4_arready),                           //  output,      width = 1,                .arready
		.s0_axi4_awready      (s0_axi4_awready),                           //  output,      width = 1,                .awready
		.s0_axi4_bid          (s0_axi4_bid),                               //  output,      width = 7,                .bid
		.s0_axi4_bresp        (s0_axi4_bresp),                             //  output,      width = 2,                .bresp
		.s0_axi4_bvalid       (s0_axi4_bvalid),                            //  output,      width = 1,                .bvalid
		.s0_axi4_rdata        (s0_axi4_rdata),                             //  output,    width = 256,                .rdata
		.s0_axi4_rid          (s0_axi4_rid),                               //  output,      width = 7,                .rid
		.s0_axi4_rlast        (s0_axi4_rlast),                             //  output,      width = 1,                .rlast
		.s0_axi4_rresp        (s0_axi4_rresp),                             //  output,      width = 2,                .rresp
		.s0_axi4_rvalid       (s0_axi4_rvalid),                            //  output,      width = 1,                .rvalid
		.s0_axi4_wready       (s0_axi4_wready),                            //  output,      width = 1,                .wready
		.mem_ck_t_0           (mem_ck_t_0),                                //  output,      width = 1,           mem_0.mem_ck_t
		.mem_ck_c_0           (mem_ck_c_0),                                //  output,      width = 1,                .mem_ck_c
		.mem_cke_0            (mem_cke_0),                                 //  output,      width = 1,                .mem_cke
		.mem_reset_n_0        (mem_reset_n_0),                             //  output,      width = 1,                .mem_reset_n
		.mem_cs_0             (mem_cs_0),                                  //  output,      width = 1,                .mem_cs
		.mem_ca_0             (mem_ca_0),                                  //  output,      width = 6,                .mem_ca
		.mem_dq_0             (mem_dq_0),                                  //   inout,     width = 32,                .mem_dq
		.mem_dqs_t_0          (mem_dqs_t_0),                               //   inout,      width = 4,                .mem_dqs_t
		.mem_dqs_c_0          (mem_dqs_c_0),                               //   inout,      width = 4,                .mem_dqs_c
		.mem_dmi_0            (mem_dmi_0),                                 //   inout,      width = 4,                .mem_dmi
		.calbus_0             (calip_0_calbus_periph_0_calbus),            //   input,   width = 1342, calbus_periph_0.calbus
		.calbus_readdata_0    (arch_0_calbus_periph_0_calbus_readdata),    //  output,   width = 1315,                .calbus_readdata
		.calbus_param_table_0 (arch_0_calbus_periph_0_calbus_param_table), //  output,  width = 32768,                .calbus_param_table
		.oct_rzqin_0          (oct_rzqin_0),                               //   input,      width = 1,           oct_0.oct_rzqin
		.i3c_scl_0            (),                                          // (terminated),                                 
		.i3c_sda_0            (),                                          // (terminated),                                 
		.ls_usr_clk_0         (1'b0),                                      // (terminated),                                 
		.ls_usr_rst_n_0       (1'b0)                                       // (terminated),                                 
	);

	ed_synth_emif_ph2_inst_emif_ph2_cal_410_q7uogfi calip_0 (
		.periph_calbus_0             (calip_0_calbus_periph_0_calbus),            //  output,   width = 1342, calbus_periph_0.calbus
		.periph_calbus_readdata_0    (arch_0_calbus_periph_0_calbus_readdata),    //   input,   width = 1315,                .calbus_readdata
		.periph_calbus_param_table_0 (arch_0_calbus_periph_0_calbus_param_table), //   input,  width = 32768,                .calbus_param_table
		.s0_axi4lite_clk             (s0_axi4lite_clk),                           //   input,      width = 1,     s0_axil_clk.clk
		.s0_axi4lite_rst_n           (s0_axi4lite_rst_n),                         //   input,      width = 1,   s0_axil_rst_n.reset_n
		.s0_axi4lite_awaddr          (s0_axi4lite_awaddr),                        //   input,     width = 32,         s0_axil.awaddr
		.s0_axi4lite_awvalid         (s0_axi4lite_awvalid),                       //   input,      width = 1,                .awvalid
		.s0_axi4lite_awready         (s0_axi4lite_awready),                       //  output,      width = 1,                .awready
		.s0_axi4lite_wdata           (s0_axi4lite_wdata),                         //   input,     width = 32,                .wdata
		.s0_axi4lite_wstrb           (s0_axi4lite_wstrb),                         //   input,      width = 4,                .wstrb
		.s0_axi4lite_wvalid          (s0_axi4lite_wvalid),                        //   input,      width = 1,                .wvalid
		.s0_axi4lite_wready          (s0_axi4lite_wready),                        //  output,      width = 1,                .wready
		.s0_axi4lite_bresp           (s0_axi4lite_bresp),                         //  output,      width = 2,                .bresp
		.s0_axi4lite_bvalid          (s0_axi4lite_bvalid),                        //  output,      width = 1,                .bvalid
		.s0_axi4lite_bready          (s0_axi4lite_bready),                        //   input,      width = 1,                .bready
		.s0_axi4lite_araddr          (s0_axi4lite_araddr),                        //   input,     width = 32,                .araddr
		.s0_axi4lite_arvalid         (s0_axi4lite_arvalid),                       //   input,      width = 1,                .arvalid
		.s0_axi4lite_arready         (s0_axi4lite_arready),                       //  output,      width = 1,                .arready
		.s0_axi4lite_rdata           (s0_axi4lite_rdata),                         //  output,     width = 32,                .rdata
		.s0_axi4lite_rresp           (s0_axi4lite_rresp),                         //  output,      width = 2,                .rresp
		.s0_axi4lite_rvalid          (s0_axi4lite_rvalid),                        //  output,      width = 1,                .rvalid
		.s0_axi4lite_rready          (s0_axi4lite_rready),                        //   input,      width = 1,                .rready
		.s0_axi4lite_awprot          (s0_axi4lite_awprot),                        //   input,      width = 3,                .awprot
		.s0_axi4lite_arprot          (s0_axi4lite_arprot)                         //   input,      width = 3,                .arprot
	);

endmodule
